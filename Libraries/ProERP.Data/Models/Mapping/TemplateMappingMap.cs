using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace ProERP.Data.Models.Mapping
{
    public class TemplateMappingMap : EntityTypeConfiguration<TemplateMapping>
    {
        public TemplateMappingMap()
        {
            // Primary Key
            this.HasKey(t => t.Id);

            // Properties
            this.Property(t => t.SystemColumnName)
                .IsRequired()
                .HasMaxLength(50);

            this.Property(t => t.ColumnName)
                .IsRequired()
                .HasMaxLength(128);

            this.Property(t => t.DataType)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(1);

            this.Property(t => t.GroupName)
                .HasMaxLength(512);

            this.Property(t => t.AggregateFunction)
                .HasMaxLength(50);

            // Table & Column Mappings
            this.ToTable("TemplateMappings");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.TemplateId).HasColumnName("TemplateId");
            this.Property(t => t.SystemColumnName).HasColumnName("SystemColumnName");
            this.Property(t => t.ColumnName).HasColumnName("ColumnName");
            this.Property(t => t.DataType).HasColumnName("DataType");
            this.Property(t => t.GroupName).HasColumnName("GroupName");
            this.Property(t => t.OrderNo).HasColumnName("OrderNo");
            this.Property(t => t.Formula).HasColumnName("Formula");
            this.Property(t => t.IsRequired).HasColumnName("IsRequired");
            this.Property(t => t.IsAggregate).HasColumnName("IsAggregate");
            this.Property(t => t.AggregateFunction).HasColumnName("AggregateFunction");
            this.Property(t => t.FixColumnId).HasColumnName("FixColumnId");
            this.Property(t => t.IsSearchColumn).HasColumnName("IsSearchColumn");
            this.Property(t => t.IsEditable).HasColumnName("IsEditable");
            this.Property(t => t.OnChangeFormula).HasColumnName("OnChangeFormula");
            this.Property(t => t.Width).HasColumnName("Width");
            this.Property(t => t.IsAutoGenerated).HasColumnName("IsAutoGenerated");
            this.Property(t => t.IsOrderBy).HasColumnName("IsOrderBy");
            this.Property(t => t.DefaultValue).HasColumnName("DefaultValue");

            // Relationships
            this.HasOptional(t => t.TemplateFixColumn)
                .WithMany(t => t.TemplateMappings)
                .HasForeignKey(d => d.FixColumnId);
            this.HasRequired(t => t.Template)
                .WithMany(t => t.TemplateMappings)
                .HasForeignKey(d => d.TemplateId);

        }
    }
}
